{
  "instanceConfigFields": {
    "email": {
      "type": "string"
    },
    "token": {
      "type": "string",
      "mask": true
    }
  },
  "authentication": {
    "strategy": "configField",
    "outputHeaders": {
      "x-api-user": "%config.email%",
      "x-api-token": "%config.token%"
    }
  },
  "baseUrl": "https://fix.me",
  "steps": [
    {
      "id": "fetch-organizations",
      "name": "Fetch Organizations",
      "entity": {
        "name": "Organization",
        "_type": "signal_sciences_organization",
        "_class": ["Organization"],
        "_keyPath": "name",
        "staticFields": {
          "nick": "ryo",
          "a": false,
          "b": true,
          "c": 0,
          "d": [1, "2", false]
        },
        "fieldMappings": {
          "name": "title",
          "displayName": "title",
          "description": "advisory.description",
          "ruleId": "advisory.ruleId",
          "severity": "advisory.severity",
          "ecosystem": "advisory.ecosystem",
          "cveIds": "advisory.references.cveIds",
          "cweIds": "advisory.references.cweIds",
          "owaspIds": "advisory.references.owaspIds",
          "urls": "advisory.references.urls",
          "advisoryCreatedOn": "advisory.announcedAt",
          "exposureType": "exposureType",
          "repositoryId": "repositoryId",
          "subdirectory": "subdirectory",
          "matchedDependencyName": "matchedDependency.name",
          "matchedDependencyVersion": "matchedDependency.versionSpecifier",
          "dependencyFileLocationPath": "dependencyFileLocation.path",
          "dependencyFileLocationUrl": "dependencyFileLocation.url",
          "triageStatus": "triage.status",
          "triageIssueUrl": "triage.issueUrl",
          "triageDismissReason": "triage.dismissReason",
          "triagePrUrl": "triage.prUrl",
          "groupKey": "groupKey",
          "packageManager": "packageManager",
          "closestSafeDependencyName": "closestSafeDependency.name",
          "closestSafeDependencyVersion": "closestSafeDependency.versionSpecifier",
          "repositoryName": "repositoryName",
          "createdOn": "openedAt",
          "firstTriagedAt": "firstTriagedAt",
          "transitivity": "transitivity"
        }
      },
      "request": {
        "urlTemplate": "/corps"
      },
      "response": {
        "dataPath": "data",
        "responseType": "LIST"
      },
      "directRelationships": [{
        "targetKey": "corps",
        "targetType": "signal_sciences_user",
        "_class": "HAS",
        "direction": "REVERSE"
      }]
    },
    {
      "id": "fetch-users",
      "name": "Fetch Users",
      "entity": {
        "name": "User",
        "_type": "signal_sciences_user",
        "_class": ["User"],
        "_keyPath": "email",
        "staticFields": {
          "jake": "nijika"
        }
      },
      "parentAssociation": {
        "parentEntityType": "signal_sciences_organization",
        "relationshipClass": "HAS"
      },
      "mappedRelationships": [
        {
          "_class": "IS",
          "direction": "REVERSE",
          "fieldMappings": [
            {
              "targetValue": "google_user",
              "targetProperty": "_type"
            },
            {
              "sourceProperty": "email",
              "targetProperty": "email"
            }
          ]
        }
      ],
      "request": {
        "urlTemplate": "/corps/%parent._key%/users"
      },
      "response": {
        "dataPath": "data",
        "nextTokenPath": "next",
        "responseType": "LIST"
      },
      "dependsOn": ["fetch-organizations"]
    },
    {
      "id": "fetch-firewalls",
      "name": "Fetch Firewalls",
      "entity": {
        "name": "Firewall",
        "_type": "signal_sciences_cloudwaf",
        "_class": ["Firewall"],
        "_keyPath": "id"
      },
      "parentAssociation": {
        "parentEntityType": "signal_sciences_organization",
        "relationshipClass": "HAS"
      },
      "request": {
        "urlTemplate": "/corps/%parent._key%/%parent._otherKey%/cloudwafInstances"
      },
      "response": {
        "dataPath": "data",
        "responseType": "LIST"
      },
      "dependsOn": ["fetch-organizations"]
    }
  ]
}
