{{#with step}}
import {
  IntegrationStep,
  IntegrationStepExecutionContext,
} from '@jupiterone/integration-sdk-core';

import { IntegrationConfig } from '../../config';
import {
  Steps,
  Entities,
  {{#if directRelationships}}
  Relationships,
  {{/if}}
} from '../constants';
import { createAPIClient } from '../../client';
import { create{{pascalCase entity.name}}Entity } from '../converters';

export const {{camelCase entity.name}}Steps: IntegrationStep<IntegrationConfig>[] = [
  {{> stepmap }}
];

export async function {{camelCase id}}({
  instance,
  jobState,
  executionConfig,
}: IntegrationStepExecutionContext<IntegrationConfig>): Promise<void> {
  const client = createAPIClient(instance.config);

  await client.iterate{{pascalCase entity.name}}s(
    '{{ request.urlTemplate }}',
    async (data) => {
        await jobState.addEntity(create{{pascalCase entity.name}}Entity(data));
    },
  );
}
{{/with}}
