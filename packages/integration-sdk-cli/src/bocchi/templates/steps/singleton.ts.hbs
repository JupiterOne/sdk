import {
  IntegrationStep,
  IntegrationStepExecutionContext,
} from '@jupiterone/integration-sdk-core';

import { IntegrationConfig } from '../../config';
import {
  Steps,
  Entities,
} from '../constants';
{{#if apiCall}}import { createAPIClient } from '../../client';{{/if}}
import { create{{pascalCase entity.name}}Entity } from '../converters';

export const {{camelCase entity.name}}Steps: IntegrationStep<IntegrationConfig>[] = [
  {{> stepmap }}
];

export async function {{camelCase id}}({
  jobState,
  executionConfig,
  instance,
}: IntegrationStepExecutionContext<IntegrationConfig>) {
  {{#if request}}
  const client = createAPIClient(instance.config, executionConfig);

  const data = await client.get{{camelCase entity.name}}();
  {{/if}}
  await jobState.addEntity(create{{pascalCase entity.name}}Entity({{#if request}}data{{/if}}));
}
