/**
 * ATTENTION. This code was AUTO GENERATED by schema2typebox.
 * While I don't know your use case, there is a high chance that direct changes
 * to this file get lost. Consider making changes to the underlying JSON schema
 * you use to generate this file instead. The default file is called
 * "schema.json", perhaps have a look there! :]
 */

import {
  Kind,
  SchemaOptions,
  Static,
  TSchema,
  TUnion,
  Type,
  TypeRegistry,
} from '@sinclair/typebox';
import { Value } from '@sinclair/typebox/value';

TypeRegistry.Set(
  'ExtendedOneOf',
  (schema: any, value) =>
    1 ===
    schema.oneOf.reduce(
      (acc: number, schema: any) => acc + (Value.Check(schema, value) ? 1 : 0),
      0,
    ),
);

const OneOf = <T extends TSchema[]>(
  oneOf: [...T],
  options: SchemaOptions = {},
) =>
  Type.Unsafe<Static<TUnion<T>>>({
    ...options,
    [Kind]: 'ExtendedOneOf',
    oneOf,
  });

export type Framework = Static<typeof Framework>;
export const Framework = Type.Object(
  {
    _class: OneOf(
      [
        Type.String({ minLength: 2 }),
        Type.Array(Type.String({ minLength: 2 }), { minItems: 1 }),
      ],
      {
        description:
          "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        inherited: true,
      },
    ),
    _key: Type.String({
      description:
        'An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.',
      minLength: 10,
      inherited: true,
    }),
    _type: Type.String({
      description:
        "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
      minLength: 3,
      inherited: true,
    }),
    description: Type.Optional(
      Type.String({ description: 'An extended description of this entity.' }),
    ),
    displayName: Type.String({ description: 'Display name' }),
    name: Type.String({ description: 'Name of this entity' }),
    standard: Type.String({
      description: 'The name of the framework standard.',
      examples: [
        'HIPAA',
        'NIST',
        'CSA STAR',
        'PCI DSS',
        'NIST CSF',
        'FedRAMP',
        'ISO 27001',
        'SOC',
        'OWASP',
        'Other',
      ],
    }),
    summary: Type.Optional(
      Type.String({
        description: 'A summary / short description of this entity.',
      }),
    ),
    version: Type.String({
      description:
        'The version of the framework. For example, OWASP may have version 2010, 2013, 2017.',
    }),
  },
  {
    $schema: 'http://json-schema.org/draft-07/schema#',
    $id: '#Framework',
    description:
      'An object to represent a standard compliance or technical security framework.',
  },
);
